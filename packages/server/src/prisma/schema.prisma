generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(cuid())
  email         String        @unique
  passwordHash  String
  nickname      String
  role          String        @default("user")
  createdAt     DateTime      @default(now())
  account       Account?
  sessions      GameSession[] @relation("UserSessions")
  ledgerEntries LedgerEntry[]
}

model Account {
  id        String        @id @default(cuid())
  user      User?         @relation(fields: [userId], references: [id])
  userId    String?       @unique
  balance   Int           @default(0)
  isLocked  Boolean       @default(false)
  ledger    LedgerEntry[]
}

model LedgerEntry {
  id        String   @id @default(cuid())
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  account   Account  @relation(fields: [accountId], references: [id])
  accountId String
  type      String
  amount    Int
  meta      Json
  createdAt DateTime @default(now())
}

model GameSession {
  id           String     @id @default(cuid())
  roomId       String     @unique
  hostUser     User       @relation("UserSessions", fields: [hostUserId], references: [id])
  hostUserId   String
  smallBlind   Int
  bigBlind     Int
  rakePct      Int
  passwordHash String?
  createdAt    DateTime @default(now())
  status       String   @default("active")
  hands        HandLog[]
}

model HandLog {
  id         String   @id @default(cuid())
  session    GameSession @relation(fields: [sessionId], references: [id])
  sessionId  String
  handNumber Int
  actions    Json
  winners    Json
  pots       Json
  createdAt  DateTime @default(now())
}
